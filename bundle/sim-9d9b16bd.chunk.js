import{a6 as e,N as n,g as t,bv as a,bt as i,b2 as s,bw as r,bx as l,by as o,bz as d,bp as p,ba as m,b5 as c,b8 as f,R as h,a3 as u,bo as S,bn as g,D as b,a$ as I,d as T,a as w}from"./raid_sim_action-8b0b0502.chunk.js";import{m as v,a as y,b as O,c as P,B as M,I as x,M as C,d as E,A as B,e as N,f as k,g as R,P as A,T as F}from"./individual_sim_ui-0004447b.chunk.js";const W=v({fieldName:"innervateTarget",id:e.fromSpellId(29166),extraCssClasses:["within-raid-sim-hide"],getValue:e=>e.getSpecOptions().innervateTarget?.targetIndex!=n,setValue:(e,a,i)=>{const s=a.getSpecOptions();s.innervateTarget=t.create({targetIndex:i?0:n}),a.setSpecOptions(e,s)}}),j={inputs:[y({fieldName:"type",label:"Type",labelTooltip:"If set to 'Adaptive', will dynamically adjust rotation.",values:[{name:"Adaptive",value:a.Adaptive}]}),O({fieldName:"useBattleRes",label:"Use Battle Res",labelTooltip:"Cast Battle Res on an ally sometime during the encounter."}),O({fieldName:"useMf",label:"Use Moonfire",labelTooltip:"Should the rotation use Moonfire."}),O({fieldName:"useIs",label:"Use Insect Swarm",labelTooltip:"Should the rotation use Insect Swarm."}),P({fieldName:"mfInsideEclipseThreshold",label:"Moonfire inside eclipse max timing",labelTooltip:"Max eclipse uptime at which Moonfire can be applied/refreshed. 15 = never refresh,  0= always refresh."}),P({fieldName:"isInsideEclipseThreshold",label:"Insect Swarm inside eclipse max timing",labelTooltip:"Max eclipse uptime at which Insect Swarm can be applied/refreshed. 15 = never refresh,  0= always refresh."}),O({fieldName:"useSmartCooldowns",label:"Smart Cooldowns usage",labelTooltip:"The rotation will use cooldowns during eclipses, avoiding Haste CDs in solar and Crit CDs in lunar"}),O({fieldName:"maximizeMfUptime",label:"Maximize Moonfire uptime",labelTooltip:"Rotation will try to keep Moonfire up without clipping"}),O({fieldName:"maximizeIsUptime",label:"Maximize Insect Swarm uptime",labelTooltip:"Rotation will try to keep Insect Swarm up without clipping"})]},z={name:"Phase 1",data:i.create({talentsString:"5032003115331303213305311231--205003012",glyphs:s.create({major1:r.GlyphOfFocus,major2:r.GlyphOfInsectSwarm,major3:r.GlyphOfStarfall,minor1:l.GlyphOfTyphoon,minor2:l.GlyphOfUnburdenedRebirth,minor3:l.GlyphOfTheWild})})},H=o.create({type:a.Adaptive,useBattleRes:!1,useIs:!0,useMf:!1,isInsideEclipseThreshold:15,mfInsideEclipseThreshold:0,useSmartCooldowns:!0,maximizeIsUptime:!0}),U=d.create({innervateTarget:t.create({targetIndex:n})}),D=p.create({defaultPotion:m.PotionOfSpeed,flask:c.FlaskOfTheFrostWyrm,food:f.FoodFishFeast,prepopPotion:m.PotionOfWildMagic,thermalSapper:!0}),G=h.create({arcaneBrilliance:!0,bloodlust:!0,divineSpirit:!0,giftOfTheWild:u.TristateEffectImproved,icyTalons:!0,moonkinAura:u.TristateEffectImproved,leaderOfThePack:u.TristateEffectImproved,powerWordFortitude:u.TristateEffectImproved,sanctifiedRetribution:!0,strengthOfEarthTotem:u.TristateEffectImproved,trueshotAura:!0,wrathOfAirTotem:!0}),_=S.create({blessingOfKings:!0,blessingOfMight:u.TristateEffectImproved,blessingOfWisdom:u.TristateEffectImproved,vampiricTouch:!0}),J=g.create({heroicPresence:!1}),V=b.create({bloodFrenzy:!0,ebonPlaguebringer:!0,faerieFire:u.TristateEffectImproved,heartOfTheCrusader:!0,judgementOfWisdom:!0,shadowMastery:!0,sunderArmor:!0,totemOfWrath:!0}),K={name:"P1 Preset",tooltip:M,gear:I.fromJsonString('{"items": [\n        {\n          "id": 40467,\n          "enchant": 44877,\n          "gems": [\n            41285,\n            42144\n          ]\n        },\n        {\n          "id": 44661,\n          "gems": [\n            40026\n          ]\n        },\n        {\n          "id": 40470,\n          "enchant": 44874,\n          "gems": [\n            42144\n          ]\n        },\n        {\n          "id": 44005,\n          "enchant": 63765,\n          "gems": [\n            40026\n          ]\n        },\n        {\n          "id": 40469,\n          "enchant": 44489,\n          "gems": [\n            42144,\n            39998\n          ]\n        },\n        {\n          "id": 44008,\n          "enchant": 44498,\n          "gems": [\n            39998,\n            0\n          ]\n        },\n        {\n          "id": 40466,\n          "enchant": 54999,\n          "gems": [\n            39998,\n            0\n          ]\n        },\n        {\n          "id": 40561,\n          "enchant": 54793,\n          "gems": [\n            39998\n          ]\n        },\n        {\n          "id": 40560,\n          "enchant": 41602\n        },\n        {\n          "id": 40519,\n          "enchant": 55016\n        },\n        {\n          "id": 40399\n        },\n        {\n          "id": 40080\n        },\n        {\n          "id": 40255\n        },\n        {\n          "id": 40432\n        },\n        {\n          "id": 40395,\n          "enchant": 44487\n        },\n        {\n          "id": 40192\n        },\n        {\n          "id": 40321\n        }\n      ]}')},$={name:"Pre-raid Preset",tooltip:M,gear:I.fromJsonString('{   "items": [\n        {\n          "id": 42554,\n          "enchant": 44877,\n          "gems": [\n            41285,\n            40049\n          ]\n        },\n        {\n          "id": 40680\n        },\n        {\n          "id": 37673,\n          "enchant": 44874,\n          "gems": [\n            42144\n          ]\n        },\n        {\n          "id": 41610,\n          "enchant": 63765\n        },\n        {\n          "id": 39547,\n          "enchant": 44489,\n          "gems": [\n            42144,\n            40026\n          ]\n        },\n        {\n          "id": 37884,\n          "enchant": 44498,\n          "gems": [\n            0\n          ]\n        },\n        {\n          "id": 39544,\n          "enchant": 54999,\n          "gems": [\n            42144,\n            0\n          ]\n        },\n        {\n          "id": 40696,\n          "enchant": 54793,\n          "gems": [\n            40014,\n            39998\n          ]\n        },\n        {\n          "id": 37854,\n          "enchant": 41602\n        },\n        {\n          "id": 44202,\n          "enchant": 55016,\n          "gems": [\n            39998\n          ]\n        },\n        {\n          "id": 40585\n        },\n        {\n          "id": 43253,\n          "gems": [\n            40026\n          ]\n        },\n        {\n          "id": 37873\n        },\n        {\n          "id": 40682\n        },\n        {\n          "id": 45085,\n          "enchant": 44487\n        },\n        {\n          "id": 40698\n        },\n        {\n          "id": 40712\n        }\n      ]\n    }')};class q extends x{constructor(e,n){super(e,n,{cssClass:"balance-druid-sim-ui",knownIssues:[],epStats:[T.StatIntellect,T.StatSpirit,T.StatSpellPower,T.StatSpellHit,T.StatSpellCrit,T.StatSpellHaste,T.StatMP5],epReferenceStat:T.StatSpellPower,displayStats:[T.StatHealth,T.StatStamina,T.StatIntellect,T.StatSpirit,T.StatSpellPower,T.StatSpellHit,T.StatSpellCrit,T.StatSpellHaste,T.StatMP5],defaults:{gear:$.gear,epWeights:w.fromMap({[T.StatIntellect]:.52,[T.StatSpirit]:.3,[T.StatSpellPower]:1,[T.StatSpellCrit]:.61,[T.StatSpellHaste]:.67,[T.StatMP5]:0}),consumes:D,rotation:H,talents:z.data,specOptions:U,raidBuffs:G,partyBuffs:J,individualBuffs:_,debuffs:V},playerIconInputs:[W],rotationInputs:j,includeBuffDebuffInputs:[C,E,B,N,k,R,A],excludeBuffDebuffInputs:[],otherInputs:{inputs:[F]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[z],gear:[K,$]}})}}export{q as B,H as D,K as P,z as S,U as a,D as b};
//# sourceMappingURL=sim-9d9b16bd.chunk.js.map
